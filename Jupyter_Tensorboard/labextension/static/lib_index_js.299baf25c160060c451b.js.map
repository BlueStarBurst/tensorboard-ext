{"version":3,"file":"lib_index_js.299baf25c160060c451b.js","mappings":"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","sources":["webpack://jupyter_tensorboard/./src/index.ts"],"sourcesContent":["import { IDisposable, DisposableDelegate } from '@lumino/disposable';\r\n\r\nimport { Widget } from '@lumino/widgets';\r\n\r\nimport {\r\n  JupyterFrontEnd,\r\n  JupyterFrontEndPlugin\r\n} from '@jupyterlab/application';\r\n\r\nimport { DocumentRegistry } from '@jupyterlab/docregistry';\r\n\r\nimport {\r\n  Notebook,\r\n  NotebookPanel,\r\n  INotebookModel,\r\n  INotebookTracker,\r\n  NotebookActions,\r\n  NotebookModel,\r\n  CellList\r\n} from '@jupyterlab/notebook';\r\n\r\n/**\r\n * Initialization data for the jupyter-tensorboard extension.\r\n */\r\nconst plugin: JupyterFrontEndPlugin<void> = {\r\n  id: 'jupyter_tensorboard:plugin',\r\n  description: 'A JupyterLab extension.',\r\n  autoStart: true,\r\n  requires: [INotebookTracker as any],\r\n  activate: activate\r\n};\r\n\r\n/**\r\n * A notebook widget extension that adds a widget in the notebook header (widget below the toolbar).\r\n//  */\r\nexport class WidgetExtension\r\n  implements DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>\r\n{\r\n  /**\r\n   * Create a new extension object.\r\n   */\r\n  createNew(\r\n    panel: NotebookPanel,\r\n    context: DocumentRegistry.IContext<INotebookModel>\r\n  ): IDisposable {\r\n    const widget = new Widget({ node: Private.createNode() });\r\n    widget.addClass('jp-myextension-myheader');\r\n\r\n    panel.contentHeader.insertWidget(0, widget as any);\r\n    return new DisposableDelegate(() => {\r\n      widget.dispose();\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Activate the extension.\r\n */\r\nfunction activate(app: JupyterFrontEnd, notebookTracker: INotebookTracker) {\r\n  // Nothing is needed\r\n  console.log('JupyterLab extension jupyter-tensorboard is activated!');\r\n\r\n  startWS(notebookTracker);\r\n\r\n  // const ws = new WebSocket('ws://localhost:3000');\r\n  // ws.onopen = () => {\r\n  //   ws.send(JSON.stringify({ type: 'jupyter', data: '' }));\r\n  //   clearInterval(interval);\r\n  // };\r\n  // ws.onmessage = event => {\r\n  //   console.log('Message from server ', event.data);\r\n  //   const data = JSON.parse(event.data);\r\n  //   switch (data.type) {\r\n  //     case 'runCell':\r\n  //       // run cell at index\r\n  //       console.log('Running cell ' + data.data);\r\n  //       // Private.runAll(notebookTracker);\r\n  //       Private.runCell(notebookTracker, data.data, ws);\r\n  //       break;\r\n  //     case 'setNotebook':\r\n  //       Private.setNotebook(notebookTracker, JSON.parse(data.data));\r\n  //       break;\r\n  //     default:\r\n  //       console.log('Unknown message');\r\n  //   }\r\n  // };\r\n  // }, 1000);\r\n\r\n  app.docRegistry.addWidgetExtension('Notebook', new WidgetExtension() as any);\r\n}\r\n\r\nfunction startWS(notebookTracker: INotebookTracker) {\r\n  const ws = new WebSocket('ws://localhost:3000');\r\n  ws.onopen = () => {\r\n    ws.send(JSON.stringify({ type: 'jupyter', data: '' }));\r\n  };\r\n  ws.onmessage = event => {\r\n    console.log('Message from server ', event.data);\r\n    const data = JSON.parse(event.data);\r\n    switch (data.type) {\r\n      case 'runCell':\r\n        // run cell at index\r\n        console.log('Running cell ' + data.data);\r\n        // Private.runAll(notebookTracker);\r\n        Private.runCell(notebookTracker, data.data, ws);\r\n        break;\r\n      case 'setNotebook':\r\n        Private.setNotebook(notebookTracker, JSON.parse(data.data));\r\n        break;\r\n      default:\r\n        console.log('Unknown message');\r\n    }\r\n  };\r\n  ws.onclose = () => {\r\n    console.log('WebSocket closed');\r\n    ws.close();\r\n    setTimeout(() => startWS(notebookTracker), 1000);\r\n  };\r\n  ws.onerror = () => {\r\n    console.log('WebSocket error');\r\n  };\r\n}\r\n\r\n// /**\r\n//  * Export the plugin as default.\r\n//  */\r\nexport default plugin;\r\n\r\n// /**\r\n//  * Private helpers\r\n//  */\r\nnamespace Private {\r\n  /**\r\n   * Generate the widget node\r\n   */\r\n  export function createNode(): HTMLElement {\r\n    const span = document.createElement('span');\r\n    span.textContent = 'If you are seeing this, the extension is working!!';\r\n    return span;\r\n  }\r\n\r\n  export function runAll(notebookTracker: INotebookTracker) {\r\n    if (notebookTracker.currentWidget) {\r\n      const sessionContext = notebookTracker.currentWidget.sessionContext;\r\n      if (sessionContext) {\r\n        NotebookActions.runAll(\r\n          notebookTracker.currentWidget.content,\r\n          sessionContext\r\n        );\r\n        console.log('Running cells');\r\n      }\r\n    }\r\n  }\r\n\r\n  export function runCell(\r\n    notebookTracker: INotebookTracker,\r\n    index: number,\r\n    ws: WebSocket\r\n  ) {\r\n    if (\r\n      notebookTracker.currentWidget &&\r\n      notebookTracker.currentWidget.content\r\n    ) {\r\n      const realCell = notebookTracker.currentWidget.content.widgets.at(index);\r\n      realCell?.activate();\r\n      realCell?.ready.then(_ => {\r\n        if (\r\n          notebookTracker.currentWidget &&\r\n          notebookTracker.currentWidget.content\r\n        ) {\r\n          const sessionContext = notebookTracker.currentWidget.sessionContext;\r\n          notebookTracker.currentWidget?.content.deselectAll();\r\n\r\n          notebookTracker.currentWidget?.content.select(realCell);\r\n\r\n          NotebookActions.runCells(\r\n            notebookTracker.currentWidget.content,\r\n            notebookTracker.currentWidget?.content.selectedCells,\r\n            sessionContext\r\n          ).then((val: boolean) => {\r\n            ws.send(\r\n              JSON.stringify({\r\n                type: 'setOutput',\r\n                data: realCell.model.sharedModel.toJSON()\r\n              })\r\n            );\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  export function setNotebook(\r\n    notebookTracker: INotebookTracker,\r\n    json: any,\r\n    test: string = 'test'\r\n  ) {\r\n    // json = JSON.parse(json);\r\n    json.metadata.orig_nbformat = 4;\r\n    console.log(json);\r\n    console.log(test);\r\n    // json = JSON.stringify(json);\r\n    notebookTracker.currentWidget?.content.model?.fromJSON(json);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}